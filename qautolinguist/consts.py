from pathlib import Path 
#from dataclasses import dataclass

#========================  COMMON PATHS AND FILENAMES (common paths) ==================
CMD_CWD         = Path().resolve()
RUNTIME_FOLDER  = Path(__file__).parent.resolve()

#========================  TEMPLATES AND HEADERS (used to build config file) ==================
INI_FILE_TEMPLATE = """
# =============================   QAutoLinguist Configuration File    =====================================
# This file is auto-generated by qautolinguist.Config .
# If you are not very familiar with the configuration file format, 
# just fill in the fields in the "Required" section. 
# Be cautious when placing values.
# Take these measures:
# 1. Do not use "" or '' to specify text strings, even if you want to specify paths containing spaces;
#      the parser parses them internally; it will cause an error if you do.
# 2. This format uses empty lines to detect braces and attributes. 
#      If you have to specify multi-line values, increase the indentation for each new line.
# ===============================================================================

[Required]
{source_file_comment}
{source_file}= {source_file_value} 

{default_language_comment}
{default_language}= {default_language_value}   

{available_languages_comment}
{available_languages}= {available_languages_value}


# =============================   OPTIONALS    =====================================
# Usually you will not need to edit this section.
# Here you can adjust where the generated files are saved and some settings to
# handle the behaviour of the QAutoLinguist
# ==================================================================================

[Optionals]
{translations_folder_comment}
{translations_folder}= {translations_folder_value}

{source_files_folder_comment}
{source_files_folder}= {source_files_folder_value}
     
{translatables_folder_comment}
{translatables_folder}= {translatables_folder_value}
        
{use_default_on_failure_comment}
{use_default_on_failure}= {use_default_on_failure_value}     

{revise_after_build_comment}
{revise_after_build}= {revise_after_build_value}      

{clean_comment}
{clean}= {clean_value}            

{debug_mode_comment}
{debug_mode}= {debug_mode_value}               

{verbose_comment}
{verbose}= {verbose_value}   


# =============================   INTERNAL    ====================================================
# Section containing special values and attributes for the correct functioning of QAutoLinguist. 
# Any changes to these values will prevent QAutoLinguist from working properly.
# ================================================================================================

[Internal]
{cwd_comment}
{cwd} = {cwd_value}
"""

PARAMS_DESCRIPTION = {
    'source_file': '.ui or .py file to search for "tr" funcs.', 
    'available_languages': 'A list of languages/locales that your aplication will support. Langs or locales can be put either as <xx_XX> or typing the lang directly (english, spanish, etc).', 'default_language': 'Reference locale, took as a reference to make other translations.', 
    'source_files_folder': 'Folder that contains the .ts files (Qt translation Files). If not specified, a folder will be created in CWD where you put the command.', 
    'translations_folder': 'Folder that contains the .qm files (Final translation files that your app will use). If not specified, a folder will be created in CWD where you put the command.', 
    'translatables_folder': 'Folder that contains the .toml files (editable translation files). If not specified, a folder will be created in CWD where you put the command.', 
    'use_default_on_failure': 'When True, translation reference will be use in case one translation in one language fails. When False a FailedTranslation exception wil be raised.', 
    'revise_after_build': 'Allow to see and edit translated translations in case you want to modify some words or phrases after compile the files.', 
    'clean': 'Removes all runtime directories created (translatables & font_files folders) and keeps the folder that contains the final translations. Essentially a clean build.', 
    'debug_mode': 'Displays information about the state of the build.', 
    'verbose': 'Displays more information about the processes done. DEBUG_MODE must be True to enable that option.'
}

TRANSLATABLE_HEADER_DEFINITION: str = (
    "This file is auto-generated by TsfComposer. "
    "It contains the translation sources of the .ts files (translation files); "
    "each line is a unique translation. "
    "Please, if you are going to review or modify its content, do it with caution, "
    "any unwanted modification will affect the creation of the binaries.\n\n"
)

# -- Translator available languages  --
# They are based in GoogleTranslator available langs and validating they are valid with any unicode
# soporte para 86 lenguajes en el mundo (GoogleTranslator soporta 133)
AVAILABLE_ALGORITHM_LANGS = {
        'afrikaans': 'af', 'albanian': 'sq', 'arabic': 'ar', 'armenian': 'hy', 'azerbaijani': 'az', 'basque': 'eu', 
         'belarusian': 'be', 'bengali': 'bn', 'bosnian': 'bs', 'bulgarian': 'bg', 'catalan': 'ca', 'cebuano': 'ceb', 
         'chinese (simplified)': 'zh-CN', 'chinese (traditional)': 'zh-TW', 'corsican': 'co', 'croatian': 'hr', 'czech': 
         'cs', 'danish': 'da', 'dutch': 'nl', 'english': 'en', 'esperanto': 'eo', 'estonian': 'et', 'filipino': 'tl', 
         'finnish': 'fi', 'french': 'fr', 'frisian': 'fy', 'galician': 'gl', 'georgian': 'ka', 'german': 'de', 'greek': 'el', 
         'gujarati': 'gu', 'haitian creole': 'ht', 'hawaiian': 'haw', 'hebrew': 'iw', 'hindi': 'hi', 'hungarian': 'hu', 
         'icelandic': 'is', 'ilocano': 'ilo', 'indonesian': 'id', 'irish': 'ga', 'italian': 'it', 'japanese': 'ja', 
         'javanese': 'jw', 'kazakh': 'kk', 'korean': 'ko', 'kurdish (kurmanji)': 'ku', 'kyrgyz': 'ky', 'lao': 'lo', 
         'latvian': 'lv', 'lithuanian': 'lt', 'luxembourgish': 'lb', 'macedonian': 'mk', 'malagasy': 'mg', 'malay': 'ms', 
         'malayalam': 'ml', 'maltese': 'mt', 'maori': 'mi', 'marathi': 'mr', 'mongolian': 'mn', 'nepali': 'ne', 'norwegian': 'no', 
         'polish': 'pl', 'portuguese': 'pt', 'punjabi': 'pa', 'romanian': 'ro', 'russian': 'ru', 'scots gaelic': 'gd', 
         'serbian': 'sr', 'sesotho': 'st', 'shona': 'sn', 'slovak': 'sk', 'slovenian': 'sl', 'spanish': 'es', 
         'sundanese': 'su', 'swahili': 'sw', 'swedish': 'sv', 'tajik': 'tg', 'thai': 'th', 'turkish': 'tr', 
         'ukrainian': 'uk', 'urdu': 'ur', 'uzbek': 'uz', 'vietnamese': 'vi', 'xhosa': 'xh', 'yiddish': 'yi', 'zulu': 'zu'
}

# Unicodes que representan espacios en blancos
SILENT_SEPARATORS = ["\u200A","\u200B","\u200C","\u200D","\u200E", "\u200F"]

UNICODES_MATCHES = {
    '\u200a': ['es'], 
    '\u200b': ['af', 'sq', 'ar', 'eu', 'be', 'bs', 'bg', 'zh-CN', 'co', 'hr', 'en', 'eo', 'et', 'fi', 'fr', 'gl', 'de', 'el', 'ht', 'iw', 'hu', 'is', 'ilo', 'id', 'it', 'kk', 'ko', 'lv', 'lt', 'ms', 'mt', 'mr', 'no', 'pl', 'pt', 'ro', 'ru', 'sr', 'sl', 'sv', 'th', 'uk', 'ur', 'vi'], 
    '\u200c': ['hy', 'az', 'ca', 'zh-TW', 'cs', 'da', 'nl', 'fy', 'ka', 'ga', 'ja', 'ky', 'lb', 'mk', 'mn', 'gd', 'sk', 'tr', 'uz', 'yi'], 
    '\u200d': ['bn', 'tl', 'gu', 'haw', 'lo', 'mg', 'mi', 'ne', 'pa'], 
    '\u200e': ['ceb', 'hi', 'jw', 'ku', 'su', 'tg'], 
    '\u200f': ['ml', 'st', 'sn', 'sw', 'xh', 'zu']

}

# @dataclass(init=False, repr=False, eq=False)
# class ConfigSectionDefinitions: 
#     """
#     Class that contains the definitions for each section in .INI file.
#     For now, we are using a ``consts.INI_FILE_TEMPLATE`` and this class is not used, but maintained just in case to switch to make .ini with dict
#     """
#     CONFIG_HEADER_DEFINITION: str = (
#         "================================    HEADER    =============================================\n"
#         "This file is auto-generated by qautolinguist.\n"
#         "Use caution when modifying this file and only modify or fill in the requested attributes.\n"
#         "Any unauthorised or improper modification may cause qautolinguist to malfunction.\n"
#         "==========================================================================================\n"
#     )
    
#     CONFIG_OPTIONALS_HEADER: str = (
#         "=============================   OPTIONALS    =====================================\n"
#         "Usually you will not need to edit this section.\n"
#         "Here you can adjust where the generated files are saved and some settings to\n"
#         "handle the behaviour of the QAutoLinguist\n"
#         "==================================================================================\n"
#     )
    
#     CONFIG_INTERNAL_HEADER : str = (
#         "=============================   INTERNAL    =====================================================\n"
#         "Section containing special values and attributes for the correct functioning of QAutoLinguist.\n" 
#         "Any changes to these values will prevent QAutoLinguist from working properly.\n"
#         "=================================================================================================\n"
#     )